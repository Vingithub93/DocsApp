<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="44083" started-at="2018-03-07T11:29:35Z" finished-at="2018-03-07T11:30:19Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="44083" started-at="2018-03-07T11:29:35Z" finished-at="2018-03-07T11:30:19Z">
      <class name="in.docsapp.tests.MaxLifeValidCaseTest">
        <test-method status="PASS" signature="CreateExtentReport()[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8]" name="CreateExtentReport" is-config="true" duration-ms="27" started-at="2018-03-07T16:59:35Z" finished-at="2018-03-07T16:59:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateExtentReport -->
        <test-method status="PASS" signature="launchApplication()[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8]" name="launchApplication" is-config="true" duration-ms="15604" started-at="2018-03-07T16:59:35Z" finished-at="2018-03-07T16:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method status="PASS" signature="getTestDetails(java.lang.reflect.Method)[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8]" name="getTestDetails" is-config="true" duration-ms="4" started-at="2018-03-07T16:59:51Z" finished-at="2018-03-07T16:59:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void in.docsapp.tests.MaxLifeValidCaseTest.createDiagnoseVerifyMaxLifeValidCase()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestDetails -->
        <test-method status="FAIL" signature="createDiagnoseVerifyMaxLifeValidCase()[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8]" name="createDiagnoseVerifyMaxLifeValidCase" duration-ms="25662" started-at="2018-03-07T16:59:51Z" finished-at="2018-03-07T17:00:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Element is not displayed expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Element is not displayed expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertFalse(Assert.java:62)
	at in.docsapp.generics.Assertion.elementNotDisplayed(Assertion.java:33)
	at in.docsapp.workflow.ServiceLib.createCaseOps(ServiceLib.java:407)
	at in.docsapp.workflow.ServiceLib.addCaseFlow(ServiceLib.java:528)
	at in.docsapp.tests.MaxLifeValidCaseTest.createDiagnoseVerifyMaxLifeValidCase(MaxLifeValidCaseTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDiagnoseVerifyMaxLifeValidCase -->
        <test-method status="PASS" signature="endtest(org.testng.ITestResult)[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8]" name="endtest" is-config="true" duration-ms="2" started-at="2018-03-07T17:00:17Z" finished-at="2018-03-07T17:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createDiagnoseVerifyMaxLifeValidCase status=FAILURE method=MaxLifeValidCaseTest.createDiagnoseVerifyMaxLifeValidCase()[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endtest -->
        <test-method status="PASS" signature="exitApplication()[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8]" name="exitApplication" is-config="true" duration-ms="2489" started-at="2018-03-07T17:00:17Z" finished-at="2018-03-07T17:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitApplication -->
        <test-method status="PASS" signature="closeExtentReport()[pri:0, instance:in.docsapp.tests.MaxLifeValidCaseTest@239963d8]" name="closeExtentReport" is-config="true" duration-ms="53" started-at="2018-03-07T17:00:19Z" finished-at="2018-03-07T17:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeExtentReport -->
      </class> <!-- in.docsapp.tests.MaxLifeValidCaseTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
